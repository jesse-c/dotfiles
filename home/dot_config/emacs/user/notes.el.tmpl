;;; notes.el --- -*- lexical-binding: t; -*-

{{- if eq .chezmoi.os "darwin"}}
(defvar org-dir "~/Documents/org/")
{{- end}}
{{- if eq .chezmoi.os "linux"}}
(defvar org-dir "~/Dropbox/org/")
{{- end}}

(setq org-log-done t)

(use-package org)

(use-package org-babel
  :after org
  :custom
  (org-confirm-babel-evaluate nil)
  :config
  (org-babel-do-load-languages 'org-babel-load-languages '((verb . t) (restclient . t) (python . t))))

(use-package org-journal
  :defer t
  :init
  ;; Change default prefix key; needs to be set before loading org-journal
  (setq org-journal-prefix-key "C-c j ")
  :custom
  (org-journal-dir (concat org-dir "journal"))
  (org-journal-date-format "%y-%m-%d %a"))

(use-package org-projectile
  :after org
  :bind
  (("C-c n p" . org-projectile-project-todo-completing-read)
   ("C-c c" . org-capture))
  :custom
  (org-projectile-per-project-filepath "TODO.org")
  (org-projectile-projects-file (concat org-dir "projects/TODOS.org"))
  :config
  (org-projectile-per-project)
  (progn
    (setq org-agenda-files (append org-agenda-files (org-projectile-todo-files)))
    (push (org-projectile-project-todo-entry) org-capture-templates)))

(use-package org-pomodoro)

(use-package org-modern)

(defun my/open-project-notes ()
  "Open the project's notes."
  (interactive)
  (let* ((notes-file-name (concat (projectile-project-root) "NOTES.org")))
    (find-file notes-file-name)))

(use-package annotate
  :custom (annotate-file "~/Documents/annotations/"))

(provide 'notes)

;;; notes.el ends here
