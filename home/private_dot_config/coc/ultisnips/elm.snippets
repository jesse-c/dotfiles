# Blocks

snippet fn "function block" b
${1}: ${2} -> ${3}
${1} ${4} =
endsnippet

snippet case "case block" b
case ${1} of
	_ ->
		${2}
endsnippet

snippet if "if-else block" b
if ${1:True} then
	${2:True}
else
	${3:False}
endsnippet

snippet let "let-in block" b
let
	${1}	
in
endsnippet

# Debugging

snippet debug "Debug.log" b
_ = Debug.log ${1} ${2}
endsnippet

snippet debug-let-in "Debug.log in let block" b
let
	_ = Debug.log ${1} ${2}
in
endsnippet

# Comments / Documentation

snippet doc "Documentation comment" b
{-| ${1}
-}
endsnippet

# Imports

snippet importele "Import elm-ui" b
import Element exposing (..)
endsnippet

snippet importui "Import a UI module" b
import UI.${1} as ${1}
endsnippet
